name: "hed_vgg16"

#### data layers start here #####
layer {
  name: 'input-data'
  type: 'Python'
  top: 'data'
  top: 'label'
  python_param {
    module: 'data_layer.layer'
    layer: 'DenseDataLayer'
  }
}

#### data layers end here #####
#### raw vgg layers start here #####

# block conv1 (fixed)
layer {
  name: "conv1_1"
  type: "Convolution"
  bottom: "data"
  top: "conv1_1"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 35
    kernel_size: 3
  }
}
layer {
  name: "relu1_1"
  type: "ReLU"
  bottom: "conv1_1"
  top: "conv1_1"
}
layer {
  name: "conv1_2"
  type: "Convolution"
  bottom: "conv1_1"
  top: "conv1_2"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu1_2"
  type: "ReLU"
  bottom: "conv1_2"
  top: "conv1_2"
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1_2"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}

# block conv2
layer {
  name: "conv2_1"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2_1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu2_1"
  type: "ReLU"
  bottom: "conv2_1"
  top: "conv2_1"
}
layer {
  name: "conv2_2"
  type: "Convolution"
  bottom: "conv2_1"
  top: "conv2_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu2_2"
  type: "ReLU"
  bottom: "conv2_2"
  top: "conv2_2"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2_2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}

# block conv3
layer {
  name: "conv3_1"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3_1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu3_1"
  type: "ReLU"
  bottom: "conv3_1"
  top: "conv3_1"
}
layer {
  name: "conv3_2"
  type: "Convolution"
  bottom: "conv3_1"
  top: "conv3_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu3_2"
  type: "ReLU"
  bottom: "conv3_2"
  top: "conv3_2"
}
layer {
  name: "conv3_3"
  type: "Convolution"
  bottom: "conv3_2"
  top: "conv3_3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu3_3"
  type: "ReLU"
  bottom: "conv3_3"
  top: "conv3_3"
}
layer {
  name: "pool3"
  type: "Pooling"
  bottom: "conv3_3"
  top: "pool3"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}

# block conv4
layer {
  name: "conv4_1"
  type: "Convolution"
  bottom: "pool3"
  top: "conv4_1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu4_1"
  type: "ReLU"
  bottom: "conv4_1"
  top: "conv4_1"
}
layer {
  name: "conv4_2"
  type: "Convolution"
  bottom: "conv4_1"
  top: "conv4_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu4_2"
  type: "ReLU"
  bottom: "conv4_2"
  top: "conv4_2"
}
layer {
  name: "conv4_3"
  type: "Convolution"
  bottom: "conv4_2"
  top: "conv4_3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu4_3"
  type: "ReLU"
  bottom: "conv4_3"
  top: "conv4_3"
}
layer {
  name: "pool4"
  type: "Pooling"
  bottom: "conv4_3"
  top: "pool4"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}

# block conv5
layer {
  name: "conv5_1"
  type: "Convolution"
  bottom: "pool4"
  top: "conv5_1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu5_1"
  type: "ReLU"
  bottom: "conv5_1"
  top: "conv5_1"
}
layer {
  name: "conv5_2"
  type: "Convolution"
  bottom: "conv5_1"
  top: "conv5_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu5_2"
  type: "ReLU"
  bottom: "conv5_2"
  top: "conv5_2"
}
layer {
  name: "conv5_3"
  type: "Convolution"
  bottom: "conv5_2"
  top: "conv5_3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu5_3"
  type: "ReLU"
  bottom: "conv5_3"
  top: "conv5_3"
}


## all the loss/"Crop" layers go here

## refine conv 5 ###
layer { 
  name: "conv5_3_m"
  type: "Convolution"
  bottom: "conv5_3"
  top: "conv5_3_m"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    kernel_size: 1
    weight_filler {
      type: "gaussian" 
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    engine: CAFFE
  }
}

layer { 
  name: "conv5_3_s"
  type: "Convolution"
  bottom: "conv5_3"
  top: "conv5_3_s"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    kernel_size: 3
    pad: 1
    weight_filler {
      type: "gaussian" 
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}

layer {
  name: "relu5_3_s"
  type: "ReLU"
  bottom: "conv5_3_s"
  top: "conv5_3_s"
}

layer {
  name: "concat_conv5"
  bottom: "conv5_3_m"
  bottom: "conv5_3_s"
  top: "conv5_3_ms"
  type: "Concat"
  concat_param {
    concat_dim: 1
  } 
}

layer { 
  name: "conv5_3_r"
  type: "Convolution"
  bottom: "conv5_3_ms"
  top: "conv5_3_r"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 16
    kernel_size: 3
    pad: 1
    weight_filler {
      type: "gaussian" 
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}

layer {
  name: "relu5_3_r"
  type: "ReLU"
  bottom: "conv5_3_r"
  top: "conv5_3_r"
}

layer {
  type: "Deconvolution"
  name: "conv5_3_up"
  bottom: "conv5_3_r"
  top: "conv5_3_up"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    kernel_size: 4
    stride: 2
    num_output: 16
    pad: 1
    group: 16
    weight_filler {
      type: "bilinear"
    }
    bias_term: false
  } 
}

## refine conv 4 ###
layer { 
  type: "Crop"
  name: "crop_conv5"
  bottom: "conv5_3_up"
  bottom: "conv4_3"
  top: "conv4_3_m" 
  crop_param {
    offset_height: 0
    offset_width: 0
  }
  propagate_down: 1
  propagate_down: 0
}

layer { 
  name: "conv4_3_s"
  type: "Convolution"
  bottom: "conv4_3"
  top: "conv4_3_s"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 16
    kernel_size: 3
    pad: 1
    weight_filler {
      type: "gaussian" 
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}

layer {
  name: "relu4_3_s"
  type: "ReLU"
  bottom: "conv4_3_s"
  top: "conv4_3_s"
}

layer {
  name: "concat_conv4"
  bottom: "conv4_3_m"
  bottom: "conv4_3_s"
  top: "conv4_3_ms"
  type: "Concat"
  concat_param {
    concat_dim: 1
  } 
}

layer { 
  name: "conv4_3_r"
  type: "Convolution"
  bottom: "conv4_3_ms"
  top: "conv4_3_r"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 8
    kernel_size: 3
    pad: 1
    weight_filler {
      type: "gaussian" 
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}

layer {
  name: "relu4_3_r"
  type: "ReLU"
  bottom: "conv4_3_r"
  top: "conv4_3_r"
}

layer {
  type: "Deconvolution"
  name: "conv4_3_up"
  bottom: "conv4_3_r"
  top: "conv4_3_up"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    kernel_size: 4
    stride: 2
    num_output: 8
    pad: 1
    group: 8
    weight_filler {
      type: "bilinear"
    }
    bias_term: false
  } 
}

## refine conv 3 ###
layer { 
  type: "Crop"
  name: "crop_conv4"
  bottom: "conv4_3_up"
  bottom: "conv3_3"
  top: "conv3_3_m" 
  crop_param {
    offset_height: 0
    offset_width: 0
  }
  propagate_down: 1
  propagate_down: 0
}

layer { 
  name: "conv3_3_s"
  type: "Convolution"
  bottom: "conv3_3"
  top: "conv3_3_s"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 8
    kernel_size: 3
    pad: 1
    weight_filler {
      type: "gaussian" 
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}

layer {
  name: "relu3_3_s"
  type: "ReLU"
  bottom: "conv3_3_s"
  top: "conv3_3_s"
}

layer {
  name: "concat_conv3"
  bottom: "conv3_3_m"
  bottom: "conv3_3_s"
  top: "conv3_3_ms"
  type: "Concat"
  concat_param {
    concat_dim: 1
  } 
}

layer { 
  name: "conv3_3_r"
  type: "Convolution"
  bottom: "conv3_3_ms"
  top: "conv3_3_r"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 4
    kernel_size: 3
    pad: 1
    weight_filler {
      type: "gaussian" 
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}

layer {
  name: "relu3_3_r"
  type: "ReLU"
  bottom: "conv3_3_r"
  top: "conv3_3_r"
}

layer {
  type: "Deconvolution"
  name: "conv3_3_up"
  bottom: "conv3_3_r"
  top: "conv3_3_up"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    kernel_size: 4
    stride: 2
    num_output: 4
    pad: 1
    group: 4
    weight_filler {
      type: "bilinear"
    }
    bias_term: false
  } 
}

## refine conv 2 ###
layer { 
  type: "Crop"
  name: "crop_conv3"
  bottom: "conv3_3_up"
  bottom: "conv2_2"
  top: "conv2_2_m" 
  crop_param {
    offset_height: 0
    offset_width: 0
  }
  propagate_down: 1
  propagate_down: 0
}

layer { 
  name: "conv2_2_s"
  type: "Convolution"
  bottom: "conv2_2"
  top: "conv2_2_s"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 4
    kernel_size: 3
    pad: 1
    weight_filler {
      type: "gaussian" 
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}

layer {
  name: "relu2_2_s"
  type: "ReLU"
  bottom: "conv2_2_s"
  top: "conv2_2_s"
}

layer {
  name: "concat_conv2"
  bottom: "conv2_2_m"
  bottom: "conv2_2_s"
  top: "conv2_2_ms"
  type: "Concat"
  concat_param {
    concat_dim: 1
  } 
}

layer { 
  name: "conv2_2_r"
  type: "Convolution"
  bottom: "conv2_2_ms"
  top: "conv2_2_r"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 2
    kernel_size: 3
    pad: 1
    weight_filler {
      type: "gaussian" 
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}

layer {
  name: "relu2_2_r"
  type: "ReLU"
  bottom: "conv2_2_r"
  top: "conv2_2_r"
}

layer {
  type: "Deconvolution"
  name: "conv2_2_up"
  bottom: "conv2_2_r"
  top: "conv2_2_up"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    kernel_size: 4
    stride: 2
    num_output: 2
    pad: 1
    group: 2
    weight_filler {
      type: "bilinear"
    }
    bias_term: false
  } 
}


## refine conv 1 ###
layer { 
  type: "Crop"
  name: "crop_conv2"
  bottom: "conv2_2_up"
  bottom: "conv1_2"
  top: "conv1_2_m" 
  crop_param {
    offset_height: 0
    offset_width: 0
  }
  propagate_down: 1
  propagate_down: 0
}

layer { 
  name: "conv1_2_s"
  type: "Convolution"
  bottom: "conv1_2"
  top: "conv1_2_s"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 2
    kernel_size: 3
    pad: 1
    weight_filler {
      type: "gaussian" 
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}

layer {
  name: "relu1_2_s"
  type: "ReLU"
  bottom: "conv1_2_s"
  top: "conv1_2_s"
}

layer {
  name: "concat_conv1"
  bottom: "conv1_2_m"
  bottom: "conv1_2_s"
  top: "conv1_2_ms"
  type: "Concat"
  concat_param {
    concat_dim: 1
  } 
}

layer { 
  name: "conv1_2_r"
  type: "Convolution"
  bottom: "conv1_2_ms"
  top: "conv1_2_r"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 1
    kernel_size: 1
    weight_filler {
      type: "gaussian" 
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    engine: CAFFE
  }
}

layer { 
  type: "Crop"
  name: "crop_conv1"
  bottom: "conv1_2_r"
  bottom: "data"
  top: "upscore-fuse" 
  crop_param {
    offset_height: 34
    offset_width: 34
  }
  propagate_down: 1
  propagate_down: 0
}


### the final loss function ###
# training
layer {
  type: "WeightedSigmoidCrossEntropyLoss"
  name: "fuse"
  bottom: "upscore-fuse"
  bottom: "label"
  propagate_down: 1
  propagate_down: 0
  top: "fuse_loss"
  loss_weight: 1
  weighted_sigmoid_cross_entropy_param {
    auto_weight: true
  }
}
